NOTE: lw is default and linewidths=0.35

######################
# INITIALIZE GALAXIES
######################


##### GALAXY 1 PARAMETERS
#########################
galaxies_l.append(Galaxy(
mass      = 1.0*M_mult,\
# Mass of the center particle. M_mult is set to 10**11 by default
# Referencing the list of all galaxies, don't change
n_rings   = 150,\
# Number of orbiting rings of test particles. Heavily impacts performance
rot       = (0, -(1.0/6.0)*pi), \
# Rotation in radians of the galaxy in global simulation reference system. (ry, rx) where ry is rotation
# around the global Y axis and X is rotation around the global X axis
v_0       = np.array([0., -70000., 0.]), \
# Vector with initial velocity. Must be a numpy array
pos_0     = np.array([0.0e20, 1.0e20, 0.]), \
# Vector with initial position. Must be a numpy array
lim_rings = (0.1, 0.48), \
# Radius of smallest and largest rings, in the form of a fraction of the eventual pericenter distance
p_count   = 37500, \
# Constant that defines the circular density of particles (n_particles = 2  pi  ring_radius / constant)
# It is recommended to only modify the denominator, but feel free to experiment.
# Heavily impacts performance as well.
spin      = 1))
# Spin sense of the orbiting particles. Set to either 1 or 0 for clockwise or anti-clockwise

##### GALAXY 2 PARAMETERS
#########################
galaxies_l.append(Galaxy(
mass      = 1.0*M_mult, \
# Mass of the center particle; M_mult is set to 10^11 times the mass of the sun by default
n_rings   = 150, \
# Number of orbiting rings of test particles. Heavily impacts performance
rot       = (0., -pi/3.0), \
# Rotation in radians of the galaxy in global simulation reference system. (ry, rx) where ry is rotation
v_0       = np.array([0., 70000., 0.]), \
# Vector with initial velocity. Must be a numpy array
pos_0     = np.array([-14.0e20, -10.0e20, 0.]), \
# Vector with initial position. Must be a numpy array
lim_rings = (0.1, 0.48), \
# Radius of smallest and largest rings, in the form of a fraction of the eventual pericenter distance
p_count   = 37500, \
# Constant that defines the circular density of particles (n_particles = 2  pi  ring_radius / constant)
# It is recommended to only modify the denominator, but feel free to experiment.
# Heavily impacts performance as well.
spin      = 1))
# Spin sense of the orbiting particles. Set to either 1 or 0 for clockwise or anti-clockwise


##### GLOBAL PARAMETERS
#######################
view = View(galaxies_l,\
length    = 22*T_mult, \
# Length of the simulation. T_mult is set to 10^8 years by default
sc        = "k", \
# Color of stars / test particles
gc        = "k", \
# Color of center of mass
debug     = False, \
# Debug mode enables the plotting of spin plane and forces trajectory to be drawn
timestep  = 0.001*T_mult, \
# Physics update timestep. T_mult is set to 10^8 years by default.
# Heavily impacts performance
view_mode = 0, \
# Set to 1 for the figures to be centered on the first galaxy.
# Set to 0 for the figures to be centered on the mid-point between the two galaxies
view_mrg  = 25*kpc.value, \
# Width of the figures.
view_ang  = [115, -7], \
# Angle of the "camera" with respect to global coordinates, in degrees
matrix_m  = False, \
n_frames  = 1, \
# Number of frames to render per T_mult amount of time (10^8 years by default)
p_size    = 0.2, \
p_fill    = False, \
p_mode    = 1, \
# 0: Randomly distributed; 1: Rings
ctr_size  = 250)
#######################
